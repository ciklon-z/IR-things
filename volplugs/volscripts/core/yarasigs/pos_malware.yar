// Point of Sale (POS) Malware

rule pos_memory_scrapper
{
meta:
	author = "@patrickrolsen"
	maltype = "Point of Sale (POS) Malware Memory Scraper"
	version = "0.2"
	description = "POS Memory Scraper"
	reference = "7f9cdc380eeed16eaab3e48d59f271aa -> 
	// http://www.xylibox.com/2013/05/dump-memory-grabber-blackpos.html"
	date = "01/03/2014"
strings:
	$magic = { 4D 5A } // MZ Header
	$string1 = "kartoxa" nocase
	$string2 = "CC2 region:"
	$string3 = "CC memregion:"
	$string4 = "target pid:"
	$string5 = "scan all processes:"
	$string6 = "<pid> <PATTERN>"
	$string7 = "KAPTOXA" nocase
condition:
	($magic at 0) and all of ($string*)
}

rule pos_malwre_dexter_stardust
{
meta:
	author = "@patrickrolsen"
	maltype = "Dexter Malware - StarDust Variant"
	version = "0.1"
	description = "Table 2 arbornetworks.com/asert/wp-content/uploads/2013/12/Dexter-and-Project-Hook-Break-the-Bank.pdf"
	reference = "16b596de4c0e4d2acdfdd6632c80c070, 2afaa709ef5260184cbda8b521b076e1, and e3dd1dc82ddcfaf410372ae7e6b2f658"
	date = "12/30/2013"
strings:
	$magic = { 4D 5A } // MZ Header
	$string1 = "ceh_3\\.\\ceh_4\\..\\ceh_6"
	$string2 = "Yatoed3fe3rex23030am39497403"
	$string3 = "Poo7lo276670173quai16568unto1828Oleo9eds96006nosysump7hove19"
	$string4 = "CommonFile.exe"
condition:
	($magic at 0) and all of ($string*)
}
    
rule pos_malware_project_hook
{
meta:
	author = "@patrickrolsen"
	maltype = "Project Hook"
	version = "0.1"
	description = "Table 1 arbornetworks.com/asert/wp-content/uploads/2013/12/Dexter-and-Project-Hook-Break-the-Bank.pdf"
	reference = "759154d20849a25315c4970fe37eac59"
	date = "12/30/2013"
strings:
	$magic = { 4D 5A } // MZ Header
	$string1 = "CallImage.exe"
	$string2 = "BurpSwim"
	$string3 = "Work\\Project\\Load"
	$string4 = "WortHisnal"
    
condition:
	($magic at 0) and all of ($string*)
}

rule pdb_strings_Rescator
{
meta:
	author = "@patrickrolsen"
	maltype = "N/A Threat Intel..."
	version = "0.2"
	description = "Rescator PDB strings within binaries"
	date = "01/03/2014"
strings:
	$magic = { 4D 5A } // MZ Header
	$pdb1 = "\\Projects\\Rescator" nocase
condition:
	($magic at 0) and $pdb1
}

rule pos_memory_scrapper
{
meta:
	author = "@patrickrolsen"
	maltype = "Point of Sale (POS) Malware Memory Scraper"
	version = "0.1"
	description = "POS Memory Scraper"
    reference = "7f9cdc380eeed16eaab3e48d59f271aa -> http://www.xylibox.com/2013/05/dump-memory-grabber-blackpos.html"
	date = "12/30/2013"
strings:
    $string1 = "kartoxa" nocase
    $string2 = "CC2 region:"
    $string3 = "CC memregion:"
    $string4 = "target pid:"
    $string5 = "scan all processes:"
    $string6 = "<pid> <PATTERN>"
condition:
	all of ($string*)
}

rule pos_memory_scrapper
{
meta:
	author = "@patrickrolsen"
	maltype = "Point of Sale (POS) Malware Memory Scraper"
	version = "0.1"
	description = "POS Memory Scraper"
    reference = "7f9cdc380eeed16eaab3e48d59f271aa -> http://www.xylibox.com/2013/05/dump-memory-grabber-blackpos.html"
	date = "12/30/2013"
strings:
    $string1 = "kartoxa" nocase
    $string2 = "CC2 region:"
    $string3 = "CC memregion:"
    $string4 = "target pid:"
    $string5 = "scan all processes:"
    $string6 = "<pid> <PATTERN>"
    $string7 = "KAPTOXA"
condition:
	all of ($string*)
}

rule CrowdStrike_targetbreach_exfil
{
    meta:
        description = "Tool Responsible for Exfiltration of CC Data."
		author="Crowdstrike"
        last_modified = "2014-01-16"
        version = "1.0"
        in_the_wild = true
        copyright = "CrowdStrike, Inc"
    strings:
        $fmt = "data_%d_%d_%d_%d_%d.txt"
        $scramble1 = "\"-BFr423mI_6uaMtg$bxl\\sd1iU/0ok.cpe"
        $scramble2 = "gBb63-t2p_.rkd0uaeU/x1c$s\\o4il"
        $scramble3 = "x\"a-201Mt6b3sI$ /ceBok_i\\m.rdpU4Fulg"
        $scramble4 = "omv3.a 1%tNd\\4ils60n2Te_w"
        $scramble5 = "4mei gd2%rob-"
        $scramble6 = "8pCt1wq_hynlsc0.u9a"
    condition:
        $fmt and 1 of ($scramble*)
}
 
rule CrowdStrike_blackpos_memscanner
{
    meta:
        description = "Tool Responsible for Scanning Memory For CC Data."
        last_modified = "2014-01-16"
        version = "1.0"
        in_the_wild = true
        copyright = "CrowdStrike, Inc"
    strings:
        $message1 = "S region:"
        $message2 = " found ["
        $message3 = "] bytes of pattern:["
        $message4 = "CC2 region:"
        $message5 = "CC memregion:"
        $message6 = "KAPTOXA"
        $message7 = "=== pid:"
        $message8 = "scan process with pid for kartoxa and string pattern:"
        $message9 = "scan process with pid for kartoxa:" 
        $message11 = "scan all processes for string pattern:" 
    condition:
        2 of ($message*)
}

rule pos_memory_scrapper
{
meta:
	author = "@patrickrolsen"
	maltype = "Point of Sale (POS) Malware Memory Scraper"
	version = "0.2"
	description = "POS Memory Scraper"
	date = "01/03/2014"
strings:
	$magic = { 4D 5A } // MZ Header
	$string1 = "kartoxa" nocase
	$string2 = "CC2 region:"
	$string3 = "CC memregion:"
	$string4 = "target pid:"
	$string5 = "scan all processes:"
	$string6 = "<pid> <PATTERN>"
	$string7 = "KAPTOXA" nocase
condition:
	($magic at 0) and all of ($string*)
}

rule pos_malwre_dexter_stardust
{
meta:
	author = "@patrickrolsen"
	maltype = "Dexter Malware - StarDust Variant"
	version = "0.1"
	description = "Table 2 arbornetworks.com/asert/wp-content/uploads/2013/12/Dexter-and-Project-Hook-Break-the-Bank.pdf"
	reference = "16b596de4c0e4d2acdfdd6632c80c070, 2afaa709ef5260184cbda8b521b076e1, and e3dd1dc82ddcfaf410372ae7e6b2f658"
	date = "12/30/2013"
strings:
	$magic = { 4D 5A } // MZ Header
	$string1 = "ceh_3\\.\\ceh_4\\..\\ceh_6"
	$string2 = "Yatoed3fe3rex23030am39497403"
	$string3 = "Poo7lo276670173quai16568unto1828Oleo9eds96006nosysump7hove19"
	$string4 = "CommonFile.exe"
condition:
	($magic at 0) and all of ($string*)
}

rule DarkComet_Config_Artifacts_Memory
{	
	meta:
		Description = "Looks for configuration artifacts from DarkComet. Works with memory dump."
		filetype = "MemoryDump"		
		Author = "Ian Ahl @TekDefese"
		Date = "12-19-2013"
		reference = "http://www.tekdefense.com/news/2013/12/23/analyzing-darkcomet-in-memory.html"
	strings:
		$s0 = "GENCODE={" ascii
		$s1 = "MELT={" ascii
		$s2 = "COMBOPATH={" ascii
		$s3 = "NETDATA={" ascii
		$s4 = "PERSINST={" ascii
	condition:
		2 of them
}

rule DarkComet_Default_Mutex_Memory
{	
	meta:
		Description = "Looks for default DarkComet mutexs"
		filetype = "MemoryDump"			
		Author = "Ian Ahl @TekDefese"
		Date = "12-20-2013"
		reference = "http://www.tekdefense.com/news/2013/12/23/analyzing-darkcomet-in-memory.html"
	strings:
		$s = "DC_MUTEX-" ascii nocase
	condition:
		any of them
}

rule DarkComet_Keylogs_Memory
{	
	meta:
		Description = "Looks for key log artifacts"
		filetype = "MemoryDump"			
		Author = "Ian Ahl @TekDefese"
		Date = "12-20-2013"
		reference = "http://www.tekdefense.com/news/2013/12/23/analyzing-darkcomet-in-memory.html"
	strings:
		$s0 = "[<-]" 
		$s1 = ":: Clipboard Change :" 
		$s2 = "[LEFT]" 
		$s4 = "[RIGHT]" 
		$s5 = "[UP]" 
		$s6 = "[DOWN]" 
		$s7 = "[DEL]" 
		$s8 = /::.{1,100}\(\d{1,2}:\d{1,2}:\d{1,2}\s\w{2}\)/ 	
	condition:
		any of them
}

rule CrowdStrike_targetbreach_exfil
{
    meta:
        description = "Tool Responsible for Exfiltration of CC Data."
        last_modified = "2014-01-16"
        version = "1.0"
        in_the_wild = true
        copyright = "CrowdStrike, Inc"
    strings:
        $fmt = "data_%d_%d_%d_%d_%d.txt"
        $scramble1 = "\"-BFr423mI_6uaMtg$bxl\\sd1iU/0ok.cpe"
        $scramble2 = "gBb63-t2p_.rkd0uaeU/x1c$s\\o4il"
        $scramble3 = "x\"a-201Mt6b3sI$ /ceBok_i\\m.rdpU4Fulg"
        $scramble4 = "omv3.a 1%tNd\\4ils60n2Te_w"
        $scramble5 = "4mei gd2%rob-"
        $scramble6 = "8pCt1wq_hynlsc0.u9a"
    condition:
        $fmt and 1 of ($scramble*)
}
 
rule CrowdStrike_blackpos_memscanner
{
    meta:
        description = "Tool Responsible for Scanning Memory For CC Data."
        last_modified = "2014-01-16"
        version = "1.0"
        in_the_wild = true
        copyright = "CrowdStrike, Inc"
    strings:
        $message1 = "S region:"
        $message2 = " found ["
        $message3 = "] bytes of pattern:["
        $message4 = "CC2 region:"
        $message5 = "CC memregion:"
        $message6 = "KAPTOXA"
        $message7 = "=== pid:"
        $message8 = "scan process with pid for kartoxa and string pattern:"
        $message9 = "scan process with pid for kartoxa:" 
        $message11 = "scan all processes for string pattern:" 
    condition:
        2 of ($message*)
}

rule CrowdStrike_targetbreach_exfil
{
    meta:
        description = "Tool Responsible for Exfiltration of CC Data."
        last_modified = "2014-01-16"
        version = "1.0"
        in_the_wild = true
        copyright = "CrowdStrike, Inc"
    strings:
        $fmt = "data_%d_%d_%d_%d_%d.txt"
        $scramble1 = "\"-BFr423mI_6uaMtg$bxl\\sd1iU/0ok.cpe"
        $scramble2 = "gBb63-t2p_.rkd0uaeU/x1c$s\\o4il"
        $scramble3 = "x\"a-201Mt6b3sI$ /ceBok_i\\m.rdpU4Fulg"
        $scramble4 = "omv3.a 1%tNd\\4ils60n2Te_w"
        $scramble5 = "4mei gd2%rob-"
        $scramble6 = "8pCt1wq_hynlsc0.u9a"
    condition:
        $fmt and 1 of ($scramble*)
}
 
rule CrowdStrike_blackpos_memscanner
{
    meta:
        description = "Tool Responsible for Scanning Memory For CC Data."
        last_modified = "2014-01-16"
        version = "1.0"
        in_the_wild = true
        copyright = "CrowdStrike, Inc"
    strings:
        $message1 = "S region:"
        $message2 = " found ["
        $message3 = "] bytes of pattern:["
        $message4 = "CC2 region:"
        $message5 = "CC memregion:"
        $message6 = "KAPTOXA"
        $message7 = "=== pid:"
        $message8 = "scan process with pid for kartoxa and string pattern:"
        $message9 = "scan process with pid for kartoxa:" 
        $message11 = "scan all processes for string pattern:" 
    condition:
        2 of ($message*)
}

rule pos_malware_project_hook
{
meta:
	author = "@patrickrolsen"
	maltype = "Project Hook"
	version = "0.1"
	description = "Table 1 arbornetworks.com/asert/wp-content/uploads/2013/12/Dexter-and-Project-Hook-Break-the-Bank.pdf"
	reference = "759154d20849a25315c4970fe37eac59"
	date = "12/30/2013"
strings:
	$magic = { 4D 5A } // MZ Header
	$string1 = "CallImage.exe"
	$string2 = "BurpSwim"
	$string3 = "Work\\Project\\Load"
	$string4 = "WortHisnal"
    
condition:
	($magic at 0) and all of ($string*)
}

